version: 2.1

jobs:
  test-linux:
    parameters:
      image:
        type: string

    docker:
      - image: circleci/python:<< parameters.image >>

    steps:
      - checkout

      - restore_cache: &restore-test-cache-template
          keys:
          - v2-dependencies-{{ checksum "requirements.txt" }}-{{ checksum "tests/requirements.txt" }}-{{ .Environment.CIRCLE_JOB }}

      - run:
          name: create virtual env and install dependencies
          command: |
            python -m venv env
            . env/bin/activate
            pip install -r requirements.txt -r tests/requirements.txt

      - save_cache: &save-test-cache-template
          paths:
            - ./env
          key: v2-dependencies-{{ checksum "requirements.txt" }}-{{ checksum "tests/requirements.txt" }}-{{ .Environment.CIRCLE_JOB }}

      - run: &run-tests-template
          name: run unittests
          command: |
            . env/bin/activate
            coverage run -m unittest discover

      - run: &codecov-template
          name: codecov
          command: |
            . env/bin/activate
            codecov

  test-doctest:
    docker:
      - image: circleci/python:3.7-stretch # as of march 2019 RTD uses 3.7

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          keys:
          - v2-dependencies-{{ checksum "requirements.txt" }}-{{ checksum "docs/requirements.txt" }}-{{ .Environment.CIRCLE_JOB }}

      - run:
          name: create virtual env and install dependencies
          command: |
            python -m venv env
            . env/bin/activate
            pip install -r requirements.txt -r docs/requirements.txt

      - save_cache:
          paths:
            - ./env
          key: v2-dependencies-{{ checksum "requirements.txt" }}-{{ checksum "docs/requirements.txt" }}-{{ .Environment.CIRCLE_JOB }}

      - run:
          name: doctest
          command: |
            . env/bin/activate
            make -C docs/ html doctest

  test-osx:
    parameters:
      python-version:
        type: string

    macos:
      xcode: "12.2.0"

    environment:
      HOMEBREW_NO_AUTO_UPDATE: 1

    steps: 
      - checkout

      - run: 
          name: install pyenv
          command: |
            brew install pyenv

      - restore_cache:
          keys:
            - pyenv-{{ .Environment.CIRCLE_JOB }}-xcode-12.2.0

      - run:
          name: install python
          command: |
            pyenv install << parameters.python-version>> -s

      - save_cache:
          paths:
            - ~/.pyenv
          key: pyenv-{{ .Environment.CIRCLE_JOB }}-xcode-12.2.0

      - restore_cache: *restore-test-cache-template

      - run:
          name: create virtual env and install dependencies
          command: |
            eval "$(pyenv init -)"
            pyenv local << parameters.python-version >>
            python -m venv env
            . env/bin/activate
            pip install -r requirements.txt -r tests/requirements.txt

      - save_cache: *save-test-cache-template
      - run: *run-tests-template
      - run: *codecov-template

  deploy:
    docker:
      - image: circleci/python:3.6-jessie

    steps:
      - checkout

      - run:
          name: create virtual env and install dependencies
          command: |
            python -m virtualenv env
            . env/bin/activate
            pip install -r requirements.txt
            pip install twine wheel

      - run:
          name: verify version matches tag
          command: |
            . env/bin/activate
            pip install .
            [[ "$(pip show dwave-system 2>/dev/null | grep Version)" == "Version: $CIRCLE_TAG" ]]

      - run:
          name: build sdist and bdist
          command: |
            . env/bin/activate
            python setup.py sdist bdist_wheel

      - run:
          name: upload
          command: |
            . env/bin/activate
            twine upload -u $PYPI_USERNAME -p $PYPI_PASSWORD --skip-existing ./dist/*

workflows:
  test:
    jobs:
      - test-linux:
          matrix:
            parameters:
              image:
                - 3.9-buster
                - 3.8-buster
                - 3.7-stretch
                - 3.6-jessie
                - 3.5-jessie
      - test-osx:
          matrix:
            parameters:
              python-version: ["3.5.4", "3.6.8", "3.7.5", "3.8.6", "3.9.0"]
      - test-doctest

  deploy:
    jobs:
      - deploy:
          filters:
            tags:
              only: /^[0-9]+(\.[0-9]+)*(\.dev([0-9]+)?)?$/
            branches:
              ignore: /.*/
